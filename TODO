[src/cil.ml]
* Check indentation in pStmtKind (for CPC constructs)
  => should be quite good already.
* Handle CPC constructs in computeCFGInfo (function succpred_stmt)
  => needs careful analysis. Handling in xform_switch_stmt is probably
     broken too, btw. Anyway, this is now done in src/ext/cfg.ml.
* peepHole doesn't dive into CpcFun
  => I think one should lambda-lift CpcFun before using it anyway.
     It is used in src/frontc/cabs2cil.ml too, but there is not
     local functions at this stage.
[src/ext/...]
* Check and correct the rough support of cpc constructs
[src/ext/cfg.ml]
* Check local functions support.
[src/ext/cpc.ml]
* Improve support of y = f(...) (when f is a cps function)
[src/ext/dataflow.ml]
* CpcConstructs do not contain instructions, but they contain
  expressions, should we ignore them too?
  => probably yes, just like if, switch, etc.
[src/frontc/cabs2cil.ml]
* check transformation of CPC_FUN (scoping, globals, etc.)

QUESTIONS
=========
* cpc_spawn, c'est pas clair du tout à quel niveau le gérer
* quand je fonctionalise, j'ajoute de cpc_done à tout bout de champ, ça ne
  fait pas de mal, mais est-ce vraiment utile ?
* il faut gérer les "escaping gotos" (ceux en position cps sont
  automatiquement fonctionalisés, mais quid des autres ?)
* copyStmt est une mauvaise idée : casse les gotos --- ou bien il faut les
  mettre à jour, ou bien faire autrement.
