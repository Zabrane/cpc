#include <cpc/cpc_runtime.h>
/* EXPECTED OUTPUT
a: 0
a: 0
a: 0
b: 0
b: 0
b: 0
a: 1
a: 1
b: 1
b: 1
a: 2
a: 2
a: 2
b: 2
b: 2
b: 2
a: 3
a: 3
b: 3
b: 3
a: 4
a: 4
a: 4
b: 4
b: 4
b: 4
a: 5
a: 5
b: 5
b: 5
a: 6
a: 6
a: 6
b: 6
b: 6
b: 6
a: 7
a: 7
b: 7
b: 7
a: 8
a: 8
a: 8
b: 8
b: 8
b: 8
a: 9
a: 9
A a fini, B devrait bientot.
b: 9
b: 9
* END OF OUTPUT */

#include <stdio.h>

cps void
g(char c)
{
    int i;

    /* Inner functions can be cps or non-cps */
    void print(void) { printf("%c: %d\n", c, i); }
    void cps cps_print(void) { printf("%c: %d\n", c, i); }

    for(i = 0; i < 10; i++) {
        cpc_yield();
        print();
        switch(i) {
          case 0: case 2: case 4: case 6: case 8:
            cps_print();
          default:
            cps_print();
        }
    }
}


int
main()
{
    cpc_spawn { g('a'); printf("A a fini, B devrait bientot.\n"); }
    cpc_spawn { g('b'); }
    cpc_main_loop();
    return 0;
}

